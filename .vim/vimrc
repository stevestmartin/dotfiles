set nocompatible

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin Manager
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has('vim_starting')
  set runtimepath +=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'
NeoBundle 'Shougo/vimproc', {'build' : {'mac' : 'make -f make_mac.mak', 'unix' : 'make -f make_unix.mak'}}

NeoBundle 'chriskempson/base16-vim' 		        " colorscheme
NeoBundle 'rking/ag.vim' 			                  " search
NeoBundle 'bling/vim-airline' 			            " statusline
NeoBundle 'tpope/vim-fugitive'			            " git
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'airblade/vim-rooter'
NeoBundle 'kana/vim-submode'
NeoBundle 'Shougo/unite.vim' 			              " completion window
NeoBundle 'scrooloose/syntastic' 		            " syntax check on buffer save
NeoBundle 'matze/vim-move' 			                " line-wise up/down shift selected blocks
NeoBundle 'Yggdroot/indentLine'
NeoBundle 'myusuf3/numbers.vim' 		            " better line numbers
NeoBundle 'terryma/vim-multiple-cursors'        " Sublime style multiple selections
NeoBundle 'tpope/vim-dispatch' 			            " build tasks FTW
NeoBundle 'tpope/vim-scriptease'
NeoBundle 'Valloric/YouCompleteMe', {'build': {'unix': './install.sh --clang-completer --system-libclang', 'mac': './install.sh --clang-completer'}}
NeoBundle 'commentary.vim'
NeoBundle 'surround.vim'
NeoBundle 'sudo.vim'
NeoBundle 'Chiel92/vim-autoformat' 		          " Autoformat code
NeoBundle 'terryma/vim-smooth-scroll'
NeoBundle 'tpope/vim-bundler'
NeoBundle 'tpope/vim-rbenv'
NeoBundle 'marijnh/tern_for_vim', { 'build': { 'mac': 'npm install', 'unix': 'npm install' } }

" html completion
NeoBundleLazy 'mattn/emmet-vim', {'autoload':{'filetypes':['html','css','eruby','less', 'sass','scss']}}
NeoBundleLazy 'cakebaker/scss-syntax.vim', {'autoload':{'filetypes':['scss','sass']}}
NeoBundleLazy 'hail2u/vim-css3-syntax', {'autoload':{'filetypes':['css','scss','sass']}}
NeoBundleLazy 'ap/vim-css-color', {'autoload':{'filetypes':['css','scss','sass','less','styl']}}
NeoBundleLazy 'kchmck/vim-coffee-script', {'autoload':{'filetypes':['coffee']}}
NeoBundleLazy 'leshill/vim-json', {'autoload':{'filetypes':['javascript','json']}}
NeoBundleLazy 'jnwhiteh/vim-golang', {'autoload':{'filetypes':['go']}}
NeoBundleLazy 'nsf/gocode', {'autoload': {'filetypes':['go']}, 'rtp': 'vim'}
NeoBundleLazy 'Shougo/unite-outline', {'autoload':{'unite_sources':'outline'}}
NeoBundleLazy 'tsukkee/unite-tag', {'autoload':{'unite_sources':['tag','tag/file']}}
NeoBundleLazy 'godlygeek/tabular', {'autoload':{'commands':'Tabularize'}}
NeoBundleLazy 'tpope/vim-markdown', {'autoload':{'filetypes':['markdown']}}
NeoBundleLazy 'tpope/vim-rails', {'autoload':{'filetypes':['eruby', 'ruby']}}
NeoBundleLazy 'KurtPreston/vim-autoformat-rails', {'autoload':{'filetypes':['eruby', 'ruby']}}
NeoBundleLazy 'pangloss/vim-javascript', {'autoload':{'filetypes':['javascript']}}
NeoBundleLazy 'maksimr/vim-jsbeautify', {'autoload':{'filetypes':['javascript']}}

" OSX pastebuffer interaction
NeoBundleLazy 'troydm/pb.vim', {'autoload':{'functions':["has('mac')"]}} 			                

" set dark/light background based on OSX light sensor
" NeoBundleLazy 'Dinduks/vim-holylight', {'autoload':{'functions':["has('mac')"]}} 		          
 	
NeoBundleCheck

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General Settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax on			            " Enable syntax highlighting
filetype plugin indent on	" Enable filetype-specific indenting and plugins

set autoread			        " Automatically read file when changed outside Vim
set history=100 		      " Keep 700 lines of command line history
set viminfo^=%            " Remember info about open buffers on close
set ttyfast			          " this is the 21st century, people
set noesckeys 			      " disable recognition of keys sending an escape sequence when in insert mode
set nrformats-=octal      "always assume decimal numbers

let mapleader = ","
let g:mapleader = ","

" Set augroup
augroup MyAutoCmd
  autocmd!
augroup END
